// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: types.proto
// Protobuf C++ Version: 6.32.1

#ifndef types_2eproto_2epb_2eh
#define types_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "math.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_types_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_types_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_types_2eproto;
}  // extern "C"
namespace Proto {
enum LoginPacketType : int;
extern const uint32_t LoginPacketType_internal_data_[];
enum LogoutPacketType : int;
extern const uint32_t LogoutPacketType_internal_data_[];
enum SyncPacketType : int;
extern const uint32_t SyncPacketType_internal_data_[];
enum TextMessageType : int;
extern const uint32_t TextMessageType_internal_data_[];
class ChatMessageBody;
struct ChatMessageBodyDefaultTypeInternal;
extern ChatMessageBodyDefaultTypeInternal _ChatMessageBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ChatMessageBody_class_data_;
class LoginNotificationBody;
struct LoginNotificationBodyDefaultTypeInternal;
extern LoginNotificationBodyDefaultTypeInternal _LoginNotificationBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LoginNotificationBody_class_data_;
class LoginRequestBody;
struct LoginRequestBodyDefaultTypeInternal;
extern LoginRequestBodyDefaultTypeInternal _LoginRequestBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LoginRequestBody_class_data_;
class LoginResponseBody;
struct LoginResponseBodyDefaultTypeInternal;
extern LoginResponseBodyDefaultTypeInternal _LoginResponseBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LoginResponseBody_class_data_;
class LogoutNotificationBody;
struct LogoutNotificationBodyDefaultTypeInternal;
extern LogoutNotificationBodyDefaultTypeInternal _LogoutNotificationBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LogoutNotificationBody_class_data_;
class LogoutRequestBody;
struct LogoutRequestBodyDefaultTypeInternal;
extern LogoutRequestBodyDefaultTypeInternal _LogoutRequestBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LogoutRequestBody_class_data_;
class LogoutResponseBody;
struct LogoutResponseBodyDefaultTypeInternal;
extern LogoutResponseBodyDefaultTypeInternal _LogoutResponseBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LogoutResponseBody_class_data_;
class Packet;
struct PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Packet_class_data_;
class SystemMessageBody;
struct SystemMessageBodyDefaultTypeInternal;
extern SystemMessageBodyDefaultTypeInternal _SystemMessageBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SystemMessageBody_class_data_;
class TransformSyncBody;
struct TransformSyncBodyDefaultTypeInternal;
extern TransformSyncBodyDefaultTypeInternal _TransformSyncBody_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TransformSyncBody_class_data_;
}  // namespace Proto
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::Proto::LoginPacketType_internal_data_>
    internal::EnumTraitsImpl::value<::Proto::LoginPacketType>;
template <>
internal::EnumTraitsT<::Proto::LogoutPacketType_internal_data_>
    internal::EnumTraitsImpl::value<::Proto::LogoutPacketType>;
template <>
internal::EnumTraitsT<::Proto::SyncPacketType_internal_data_>
    internal::EnumTraitsImpl::value<::Proto::SyncPacketType>;
template <>
internal::EnumTraitsT<::Proto::TextMessageType_internal_data_>
    internal::EnumTraitsImpl::value<::Proto::TextMessageType>;
}  // namespace protobuf
}  // namespace google

namespace Proto {
enum TextMessageType : int {
  MessageChatSend = 0,
  MessageChatReceive = 1,
  MessageSystemMessage = 2,
  TextMessageType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  TextMessageType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t TextMessageType_internal_data_[];
inline constexpr TextMessageType TextMessageType_MIN =
    static_cast<TextMessageType>(0);
inline constexpr TextMessageType TextMessageType_MAX =
    static_cast<TextMessageType>(2);
inline bool TextMessageType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int TextMessageType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TextMessageType_descriptor();
template <typename T>
const ::std::string& TextMessageType_Name(T value) {
  static_assert(::std::is_same<T, TextMessageType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to TextMessageType_Name().");
  return TextMessageType_Name(static_cast<TextMessageType>(value));
}
template <>
inline const ::std::string& TextMessageType_Name(TextMessageType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TextMessageType_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool TextMessageType_Parse(
    ::absl::string_view name, TextMessageType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<TextMessageType>(TextMessageType_descriptor(), name,
                                           value);
}
enum LoginPacketType : int {
  LoginRequest = 0,
  LoginResponse = 1,
  LoginNotification = 2,
  LoginPacketType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  LoginPacketType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t LoginPacketType_internal_data_[];
inline constexpr LoginPacketType LoginPacketType_MIN =
    static_cast<LoginPacketType>(0);
inline constexpr LoginPacketType LoginPacketType_MAX =
    static_cast<LoginPacketType>(2);
inline bool LoginPacketType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int LoginPacketType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LoginPacketType_descriptor();
template <typename T>
const ::std::string& LoginPacketType_Name(T value) {
  static_assert(::std::is_same<T, LoginPacketType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to LoginPacketType_Name().");
  return LoginPacketType_Name(static_cast<LoginPacketType>(value));
}
template <>
inline const ::std::string& LoginPacketType_Name(LoginPacketType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LoginPacketType_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool LoginPacketType_Parse(
    ::absl::string_view name, LoginPacketType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginPacketType>(LoginPacketType_descriptor(), name,
                                           value);
}
enum LogoutPacketType : int {
  LogoutRequest = 0,
  LogoutResponse = 1,
  LogoutNotification = 2,
  LogoutPacketType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  LogoutPacketType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t LogoutPacketType_internal_data_[];
inline constexpr LogoutPacketType LogoutPacketType_MIN =
    static_cast<LogoutPacketType>(0);
inline constexpr LogoutPacketType LogoutPacketType_MAX =
    static_cast<LogoutPacketType>(2);
inline bool LogoutPacketType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int LogoutPacketType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LogoutPacketType_descriptor();
template <typename T>
const ::std::string& LogoutPacketType_Name(T value) {
  static_assert(::std::is_same<T, LogoutPacketType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to LogoutPacketType_Name().");
  return LogoutPacketType_Name(static_cast<LogoutPacketType>(value));
}
template <>
inline const ::std::string& LogoutPacketType_Name(LogoutPacketType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LogoutPacketType_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool LogoutPacketType_Parse(
    ::absl::string_view name, LogoutPacketType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<LogoutPacketType>(LogoutPacketType_descriptor(), name,
                                           value);
}
enum SyncPacketType : int {
  SyncTransform = 0,
  SyncPacketType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  SyncPacketType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t SyncPacketType_internal_data_[];
inline constexpr SyncPacketType SyncPacketType_MIN =
    static_cast<SyncPacketType>(0);
inline constexpr SyncPacketType SyncPacketType_MAX =
    static_cast<SyncPacketType>(0);
inline bool SyncPacketType_IsValid(int value) {
  return 0 <= value && value <= 0;
}
inline constexpr int SyncPacketType_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SyncPacketType_descriptor();
template <typename T>
const ::std::string& SyncPacketType_Name(T value) {
  static_assert(::std::is_same<T, SyncPacketType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to SyncPacketType_Name().");
  return SyncPacketType_Name(static_cast<SyncPacketType>(value));
}
template <>
inline const ::std::string& SyncPacketType_Name(SyncPacketType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SyncPacketType_descriptor, 0, 0>(
      static_cast<int>(value));
}
inline bool SyncPacketType_Parse(
    ::absl::string_view name, SyncPacketType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncPacketType>(SyncPacketType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class SystemMessageBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.SystemMessageBody) */ {
 public:
  inline SystemMessageBody() : SystemMessageBody(nullptr) {}
  ~SystemMessageBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SystemMessageBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SystemMessageBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SystemMessageBody(::google::protobuf::internal::ConstantInitialized);

  inline SystemMessageBody(const SystemMessageBody& from) : SystemMessageBody(nullptr, from) {}
  inline SystemMessageBody(SystemMessageBody&& from) noexcept
      : SystemMessageBody(nullptr, ::std::move(from)) {}
  inline SystemMessageBody& operator=(const SystemMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemMessageBody& operator=(SystemMessageBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SystemMessageBody& default_instance() {
    return *reinterpret_cast<const SystemMessageBody*>(
        &_SystemMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SystemMessageBody& a, SystemMessageBody& b) { a.Swap(&b); }
  inline void Swap(SystemMessageBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SystemMessageBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SystemMessageBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SystemMessageBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SystemMessageBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SystemMessageBody& from) { SystemMessageBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SystemMessageBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.SystemMessageBody"; }

 protected:
  explicit SystemMessageBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SystemMessageBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SystemMessageBody& from);
  SystemMessageBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SystemMessageBody&& from) noexcept
      : SystemMessageBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
  };
  // string message = 1;
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:Proto.SystemMessageBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 39,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SystemMessageBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SystemMessageBody_class_data_;
// -------------------------------------------------------------------

class Packet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.Packet) */ {
 public:
  inline Packet() : Packet(nullptr) {}
  ~Packet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Packet* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Packet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Packet(::google::protobuf::internal::ConstantInitialized);

  inline Packet(const Packet& from) : Packet(nullptr, from) {}
  inline Packet(Packet&& from) noexcept
      : Packet(nullptr, ::std::move(from)) {}
  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }
  inline Packet& operator=(Packet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Packet& default_instance() {
    return *reinterpret_cast<const Packet*>(
        &_Packet_default_instance_);
  }
  enum CategoryCase {
    kTextMessageType = 1,
    kLoginPacketType = 2,
    kLogoutPacketType = 3,
    kSyncPacketType = 4,
    CATEGORY_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Packet& a, Packet& b) { a.Swap(&b); }
  inline void Swap(Packet* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Packet* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Packet* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Packet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Packet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Packet& from) { Packet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Packet* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.Packet"; }

 protected:
  explicit Packet(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Packet(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Packet& from);
  Packet(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Packet&& from) noexcept
      : Packet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 6,
    kTimestampFieldNumber = 5,
    kTextMessageTypeFieldNumber = 1,
    kLoginPacketTypeFieldNumber = 2,
    kLogoutPacketTypeFieldNumber = 3,
    kSyncPacketTypeFieldNumber = 4,
  };
  // bytes payload = 6;
  void clear_payload() ;
  const ::std::string& payload() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_payload();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_payload();
  void set_allocated_payload(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_payload() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_payload(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_payload();

  public:
  // uint64 timestamp = 5;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // .Proto.TextMessageType textMessageType = 1;
  bool has_textmessagetype() const;
  void clear_textmessagetype() ;
  ::Proto::TextMessageType textmessagetype() const;
  void set_textmessagetype(::Proto::TextMessageType value);

  private:
  ::Proto::TextMessageType _internal_textmessagetype() const;
  void _internal_set_textmessagetype(::Proto::TextMessageType value);

  public:
  // .Proto.LoginPacketType loginPacketType = 2;
  bool has_loginpackettype() const;
  void clear_loginpackettype() ;
  ::Proto::LoginPacketType loginpackettype() const;
  void set_loginpackettype(::Proto::LoginPacketType value);

  private:
  ::Proto::LoginPacketType _internal_loginpackettype() const;
  void _internal_set_loginpackettype(::Proto::LoginPacketType value);

  public:
  // .Proto.LogoutPacketType logoutPacketType = 3;
  bool has_logoutpackettype() const;
  void clear_logoutpackettype() ;
  ::Proto::LogoutPacketType logoutpackettype() const;
  void set_logoutpackettype(::Proto::LogoutPacketType value);

  private:
  ::Proto::LogoutPacketType _internal_logoutpackettype() const;
  void _internal_set_logoutpackettype(::Proto::LogoutPacketType value);

  public:
  // .Proto.SyncPacketType syncPacketType = 4;
  bool has_syncpackettype() const;
  void clear_syncpackettype() ;
  ::Proto::SyncPacketType syncpackettype() const;
  void set_syncpackettype(::Proto::SyncPacketType value);

  private:
  ::Proto::SyncPacketType _internal_syncpackettype() const;
  void _internal_set_syncpackettype(::Proto::SyncPacketType value);

  public:
  void clear_category();
  CategoryCase category_case() const;
  // @@protoc_insertion_point(class_scope:Proto.Packet)
 private:
  class _Internal;
  void set_has_textmessagetype();
  void set_has_loginpackettype();
  void set_has_logoutpackettype();
  void set_has_syncpackettype();
  inline bool has_category() const;
  inline void clear_has_category();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 6,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Packet& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr payload_;
    ::uint64_t timestamp_;
    union CategoryUnion {
      constexpr CategoryUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      int textmessagetype_;
      int loginpackettype_;
      int logoutpackettype_;
      int syncpackettype_;
    } category_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Packet_class_data_;
// -------------------------------------------------------------------

class LogoutResponseBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.LogoutResponseBody) */ {
 public:
  inline LogoutResponseBody() : LogoutResponseBody(nullptr) {}
  ~LogoutResponseBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LogoutResponseBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LogoutResponseBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogoutResponseBody(::google::protobuf::internal::ConstantInitialized);

  inline LogoutResponseBody(const LogoutResponseBody& from) : LogoutResponseBody(nullptr, from) {}
  inline LogoutResponseBody(LogoutResponseBody&& from) noexcept
      : LogoutResponseBody(nullptr, ::std::move(from)) {}
  inline LogoutResponseBody& operator=(const LogoutResponseBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogoutResponseBody& operator=(LogoutResponseBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogoutResponseBody& default_instance() {
    return *reinterpret_cast<const LogoutResponseBody*>(
        &_LogoutResponseBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(LogoutResponseBody& a, LogoutResponseBody& b) { a.Swap(&b); }
  inline void Swap(LogoutResponseBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogoutResponseBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogoutResponseBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LogoutResponseBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogoutResponseBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogoutResponseBody& from) { LogoutResponseBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LogoutResponseBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.LogoutResponseBody"; }

 protected:
  explicit LogoutResponseBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LogoutResponseBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LogoutResponseBody& from);
  LogoutResponseBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LogoutResponseBody&& from) noexcept
      : LogoutResponseBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsSuccessedFieldNumber = 1,
  };
  // bool isSuccessed = 1;
  void clear_issuccessed() ;
  bool issuccessed() const;
  void set_issuccessed(bool value);

  private:
  bool _internal_issuccessed() const;
  void _internal_set_issuccessed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Proto.LogoutResponseBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LogoutResponseBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool issuccessed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LogoutResponseBody_class_data_;
// -------------------------------------------------------------------

class LogoutRequestBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.LogoutRequestBody) */ {
 public:
  inline LogoutRequestBody() : LogoutRequestBody(nullptr) {}
  ~LogoutRequestBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LogoutRequestBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LogoutRequestBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogoutRequestBody(::google::protobuf::internal::ConstantInitialized);

  inline LogoutRequestBody(const LogoutRequestBody& from) : LogoutRequestBody(nullptr, from) {}
  inline LogoutRequestBody(LogoutRequestBody&& from) noexcept
      : LogoutRequestBody(nullptr, ::std::move(from)) {}
  inline LogoutRequestBody& operator=(const LogoutRequestBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogoutRequestBody& operator=(LogoutRequestBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogoutRequestBody& default_instance() {
    return *reinterpret_cast<const LogoutRequestBody*>(
        &_LogoutRequestBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(LogoutRequestBody& a, LogoutRequestBody& b) { a.Swap(&b); }
  inline void Swap(LogoutRequestBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogoutRequestBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogoutRequestBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LogoutRequestBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogoutRequestBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogoutRequestBody& from) { LogoutRequestBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LogoutRequestBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.LogoutRequestBody"; }

 protected:
  explicit LogoutRequestBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LogoutRequestBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LogoutRequestBody& from);
  LogoutRequestBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LogoutRequestBody&& from) noexcept
      : LogoutRequestBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // uint64 userId = 1;
  void clear_userid() ;
  ::uint64_t userid() const;
  void set_userid(::uint64_t value);

  private:
  ::uint64_t _internal_userid() const;
  void _internal_set_userid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Proto.LogoutRequestBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LogoutRequestBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LogoutRequestBody_class_data_;
// -------------------------------------------------------------------

class LogoutNotificationBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.LogoutNotificationBody) */ {
 public:
  inline LogoutNotificationBody() : LogoutNotificationBody(nullptr) {}
  ~LogoutNotificationBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LogoutNotificationBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LogoutNotificationBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogoutNotificationBody(::google::protobuf::internal::ConstantInitialized);

  inline LogoutNotificationBody(const LogoutNotificationBody& from) : LogoutNotificationBody(nullptr, from) {}
  inline LogoutNotificationBody(LogoutNotificationBody&& from) noexcept
      : LogoutNotificationBody(nullptr, ::std::move(from)) {}
  inline LogoutNotificationBody& operator=(const LogoutNotificationBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogoutNotificationBody& operator=(LogoutNotificationBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogoutNotificationBody& default_instance() {
    return *reinterpret_cast<const LogoutNotificationBody*>(
        &_LogoutNotificationBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(LogoutNotificationBody& a, LogoutNotificationBody& b) { a.Swap(&b); }
  inline void Swap(LogoutNotificationBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogoutNotificationBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogoutNotificationBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LogoutNotificationBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogoutNotificationBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogoutNotificationBody& from) { LogoutNotificationBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LogoutNotificationBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.LogoutNotificationBody"; }

 protected:
  explicit LogoutNotificationBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LogoutNotificationBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LogoutNotificationBody& from);
  LogoutNotificationBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LogoutNotificationBody&& from) noexcept
      : LogoutNotificationBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernameFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string username = 2;
  void clear_username() ;
  const ::std::string& username() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_username();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_username();
  void set_allocated_username(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_username() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_username(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_username();

  public:
  // uint64 userId = 1;
  void clear_userid() ;
  ::uint64_t userid() const;
  void set_userid(::uint64_t value);

  private:
  ::uint64_t _internal_userid() const;
  void _internal_set_userid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Proto.LogoutNotificationBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LogoutNotificationBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::uint64_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LogoutNotificationBody_class_data_;
// -------------------------------------------------------------------

class LoginResponseBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.LoginResponseBody) */ {
 public:
  inline LoginResponseBody() : LoginResponseBody(nullptr) {}
  ~LoginResponseBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginResponseBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginResponseBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginResponseBody(::google::protobuf::internal::ConstantInitialized);

  inline LoginResponseBody(const LoginResponseBody& from) : LoginResponseBody(nullptr, from) {}
  inline LoginResponseBody(LoginResponseBody&& from) noexcept
      : LoginResponseBody(nullptr, ::std::move(from)) {}
  inline LoginResponseBody& operator=(const LoginResponseBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginResponseBody& operator=(LoginResponseBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginResponseBody& default_instance() {
    return *reinterpret_cast<const LoginResponseBody*>(
        &_LoginResponseBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(LoginResponseBody& a, LoginResponseBody& b) { a.Swap(&b); }
  inline void Swap(LoginResponseBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginResponseBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginResponseBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginResponseBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginResponseBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginResponseBody& from) { LoginResponseBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginResponseBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.LoginResponseBody"; }

 protected:
  explicit LoginResponseBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LoginResponseBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LoginResponseBody& from);
  LoginResponseBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LoginResponseBody&& from) noexcept
      : LoginResponseBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsSuccessedFieldNumber = 1,
  };
  // bool isSuccessed = 1;
  void clear_issuccessed() ;
  bool issuccessed() const;
  void set_issuccessed(bool value);

  private:
  bool _internal_issuccessed() const;
  void _internal_set_issuccessed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Proto.LoginResponseBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LoginResponseBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool issuccessed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LoginResponseBody_class_data_;
// -------------------------------------------------------------------

class LoginRequestBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.LoginRequestBody) */ {
 public:
  inline LoginRequestBody() : LoginRequestBody(nullptr) {}
  ~LoginRequestBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginRequestBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginRequestBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRequestBody(::google::protobuf::internal::ConstantInitialized);

  inline LoginRequestBody(const LoginRequestBody& from) : LoginRequestBody(nullptr, from) {}
  inline LoginRequestBody(LoginRequestBody&& from) noexcept
      : LoginRequestBody(nullptr, ::std::move(from)) {}
  inline LoginRequestBody& operator=(const LoginRequestBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRequestBody& operator=(LoginRequestBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRequestBody& default_instance() {
    return *reinterpret_cast<const LoginRequestBody*>(
        &_LoginRequestBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LoginRequestBody& a, LoginRequestBody& b) { a.Swap(&b); }
  inline void Swap(LoginRequestBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRequestBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRequestBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginRequestBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRequestBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginRequestBody& from) { LoginRequestBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginRequestBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.LoginRequestBody"; }

 protected:
  explicit LoginRequestBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LoginRequestBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LoginRequestBody& from);
  LoginRequestBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LoginRequestBody&& from) noexcept
      : LoginRequestBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // uint64 userId = 1;
  void clear_userid() ;
  ::uint64_t userid() const;
  void set_userid(::uint64_t value);

  private:
  ::uint64_t _internal_userid() const;
  void _internal_set_userid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Proto.LoginRequestBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LoginRequestBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LoginRequestBody_class_data_;
// -------------------------------------------------------------------

class LoginNotificationBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.LoginNotificationBody) */ {
 public:
  inline LoginNotificationBody() : LoginNotificationBody(nullptr) {}
  ~LoginNotificationBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginNotificationBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginNotificationBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginNotificationBody(::google::protobuf::internal::ConstantInitialized);

  inline LoginNotificationBody(const LoginNotificationBody& from) : LoginNotificationBody(nullptr, from) {}
  inline LoginNotificationBody(LoginNotificationBody&& from) noexcept
      : LoginNotificationBody(nullptr, ::std::move(from)) {}
  inline LoginNotificationBody& operator=(const LoginNotificationBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginNotificationBody& operator=(LoginNotificationBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginNotificationBody& default_instance() {
    return *reinterpret_cast<const LoginNotificationBody*>(
        &_LoginNotificationBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(LoginNotificationBody& a, LoginNotificationBody& b) { a.Swap(&b); }
  inline void Swap(LoginNotificationBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginNotificationBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginNotificationBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginNotificationBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginNotificationBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginNotificationBody& from) { LoginNotificationBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginNotificationBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.LoginNotificationBody"; }

 protected:
  explicit LoginNotificationBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LoginNotificationBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LoginNotificationBody& from);
  LoginNotificationBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LoginNotificationBody&& from) noexcept
      : LoginNotificationBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernameFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string username = 2;
  void clear_username() ;
  const ::std::string& username() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_username();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_username();
  void set_allocated_username(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_username() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_username(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_username();

  public:
  // uint64 userId = 1;
  void clear_userid() ;
  ::uint64_t userid() const;
  void set_userid(::uint64_t value);

  private:
  ::uint64_t _internal_userid() const;
  void _internal_set_userid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Proto.LoginNotificationBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LoginNotificationBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::uint64_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LoginNotificationBody_class_data_;
// -------------------------------------------------------------------

class ChatMessageBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.ChatMessageBody) */ {
 public:
  inline ChatMessageBody() : ChatMessageBody(nullptr) {}
  ~ChatMessageBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChatMessageBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChatMessageBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChatMessageBody(::google::protobuf::internal::ConstantInitialized);

  inline ChatMessageBody(const ChatMessageBody& from) : ChatMessageBody(nullptr, from) {}
  inline ChatMessageBody(ChatMessageBody&& from) noexcept
      : ChatMessageBody(nullptr, ::std::move(from)) {}
  inline ChatMessageBody& operator=(const ChatMessageBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChatMessageBody& operator=(ChatMessageBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChatMessageBody& default_instance() {
    return *reinterpret_cast<const ChatMessageBody*>(
        &_ChatMessageBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ChatMessageBody& a, ChatMessageBody& b) { a.Swap(&b); }
  inline void Swap(ChatMessageBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChatMessageBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChatMessageBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChatMessageBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChatMessageBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChatMessageBody& from) { ChatMessageBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChatMessageBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.ChatMessageBody"; }

 protected:
  explicit ChatMessageBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ChatMessageBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ChatMessageBody& from);
  ChatMessageBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ChatMessageBody&& from) noexcept
      : ChatMessageBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // uint64 userId = 1;
  void clear_userid() ;
  ::uint64_t userid() const;
  void set_userid(::uint64_t value);

  private:
  ::uint64_t _internal_userid() const;
  void _internal_set_userid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Proto.ChatMessageBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 37,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ChatMessageBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::uint64_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ChatMessageBody_class_data_;
// -------------------------------------------------------------------

class TransformSyncBody final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Proto.TransformSyncBody) */ {
 public:
  inline TransformSyncBody() : TransformSyncBody(nullptr) {}
  ~TransformSyncBody() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TransformSyncBody* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TransformSyncBody));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransformSyncBody(::google::protobuf::internal::ConstantInitialized);

  inline TransformSyncBody(const TransformSyncBody& from) : TransformSyncBody(nullptr, from) {}
  inline TransformSyncBody(TransformSyncBody&& from) noexcept
      : TransformSyncBody(nullptr, ::std::move(from)) {}
  inline TransformSyncBody& operator=(const TransformSyncBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransformSyncBody& operator=(TransformSyncBody&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransformSyncBody& default_instance() {
    return *reinterpret_cast<const TransformSyncBody*>(
        &_TransformSyncBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(TransformSyncBody& a, TransformSyncBody& b) { a.Swap(&b); }
  inline void Swap(TransformSyncBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransformSyncBody* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransformSyncBody* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TransformSyncBody>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransformSyncBody& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransformSyncBody& from) { TransformSyncBody::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TransformSyncBody* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Proto.TransformSyncBody"; }

 protected:
  explicit TransformSyncBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TransformSyncBody(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TransformSyncBody& from);
  TransformSyncBody(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TransformSyncBody&& from) noexcept
      : TransformSyncBody(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 2,
    kRotationFieldNumber = 3,
    kUserIdFieldNumber = 1,
  };
  // .Proto.Vector3 position = 2;
  bool has_position() const;
  void clear_position() ;
  const ::Proto::Vector3& position() const;
  [[nodiscard]] ::Proto::Vector3* PROTOBUF_NULLABLE release_position();
  ::Proto::Vector3* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::Proto::Vector3* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::Proto::Vector3* PROTOBUF_NULLABLE value);
  ::Proto::Vector3* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::Proto::Vector3& _internal_position() const;
  ::Proto::Vector3* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // .Proto.Quaternion rotation = 3;
  bool has_rotation() const;
  void clear_rotation() ;
  const ::Proto::Quaternion& rotation() const;
  [[nodiscard]] ::Proto::Quaternion* PROTOBUF_NULLABLE release_rotation();
  ::Proto::Quaternion* PROTOBUF_NONNULL mutable_rotation();
  void set_allocated_rotation(::Proto::Quaternion* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_rotation(::Proto::Quaternion* PROTOBUF_NULLABLE value);
  ::Proto::Quaternion* PROTOBUF_NULLABLE unsafe_arena_release_rotation();

  private:
  const ::Proto::Quaternion& _internal_rotation() const;
  ::Proto::Quaternion* PROTOBUF_NONNULL _internal_mutable_rotation();

  public:
  // uint64 userId = 1;
  void clear_userid() ;
  ::uint64_t userid() const;
  void set_userid(::uint64_t value);

  private:
  ::uint64_t _internal_userid() const;
  void _internal_set_userid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Proto.TransformSyncBody)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TransformSyncBody& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::Proto::Vector3* PROTOBUF_NULLABLE position_;
    ::Proto::Quaternion* PROTOBUF_NULLABLE rotation_;
    ::uint64_t userid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_types_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TransformSyncBody_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Packet

// .Proto.TextMessageType textMessageType = 1;
inline bool Packet::has_textmessagetype() const {
  return category_case() == kTextMessageType;
}
inline void Packet::set_has_textmessagetype() {
  _impl_._oneof_case_[0] = kTextMessageType;
}
inline void Packet::clear_textmessagetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (category_case() == kTextMessageType) {
    _impl_.category_.textmessagetype_ = 0;
    clear_has_category();
  }
}
inline ::Proto::TextMessageType Packet::textmessagetype() const {
  // @@protoc_insertion_point(field_get:Proto.Packet.textMessageType)
  return _internal_textmessagetype();
}
inline void Packet::set_textmessagetype(::Proto::TextMessageType value) {
  if (category_case() != kTextMessageType) {
    clear_category();
    set_has_textmessagetype();
  }
  _impl_.category_.textmessagetype_ = value;
  // @@protoc_insertion_point(field_set:Proto.Packet.textMessageType)
}
inline ::Proto::TextMessageType Packet::_internal_textmessagetype() const {
  if (category_case() == kTextMessageType) {
    return static_cast<::Proto::TextMessageType>(_impl_.category_.textmessagetype_);
  }
  return static_cast<::Proto::TextMessageType>(0);
}

// .Proto.LoginPacketType loginPacketType = 2;
inline bool Packet::has_loginpackettype() const {
  return category_case() == kLoginPacketType;
}
inline void Packet::set_has_loginpackettype() {
  _impl_._oneof_case_[0] = kLoginPacketType;
}
inline void Packet::clear_loginpackettype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (category_case() == kLoginPacketType) {
    _impl_.category_.loginpackettype_ = 0;
    clear_has_category();
  }
}
inline ::Proto::LoginPacketType Packet::loginpackettype() const {
  // @@protoc_insertion_point(field_get:Proto.Packet.loginPacketType)
  return _internal_loginpackettype();
}
inline void Packet::set_loginpackettype(::Proto::LoginPacketType value) {
  if (category_case() != kLoginPacketType) {
    clear_category();
    set_has_loginpackettype();
  }
  _impl_.category_.loginpackettype_ = value;
  // @@protoc_insertion_point(field_set:Proto.Packet.loginPacketType)
}
inline ::Proto::LoginPacketType Packet::_internal_loginpackettype() const {
  if (category_case() == kLoginPacketType) {
    return static_cast<::Proto::LoginPacketType>(_impl_.category_.loginpackettype_);
  }
  return static_cast<::Proto::LoginPacketType>(0);
}

// .Proto.LogoutPacketType logoutPacketType = 3;
inline bool Packet::has_logoutpackettype() const {
  return category_case() == kLogoutPacketType;
}
inline void Packet::set_has_logoutpackettype() {
  _impl_._oneof_case_[0] = kLogoutPacketType;
}
inline void Packet::clear_logoutpackettype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (category_case() == kLogoutPacketType) {
    _impl_.category_.logoutpackettype_ = 0;
    clear_has_category();
  }
}
inline ::Proto::LogoutPacketType Packet::logoutpackettype() const {
  // @@protoc_insertion_point(field_get:Proto.Packet.logoutPacketType)
  return _internal_logoutpackettype();
}
inline void Packet::set_logoutpackettype(::Proto::LogoutPacketType value) {
  if (category_case() != kLogoutPacketType) {
    clear_category();
    set_has_logoutpackettype();
  }
  _impl_.category_.logoutpackettype_ = value;
  // @@protoc_insertion_point(field_set:Proto.Packet.logoutPacketType)
}
inline ::Proto::LogoutPacketType Packet::_internal_logoutpackettype() const {
  if (category_case() == kLogoutPacketType) {
    return static_cast<::Proto::LogoutPacketType>(_impl_.category_.logoutpackettype_);
  }
  return static_cast<::Proto::LogoutPacketType>(0);
}

// .Proto.SyncPacketType syncPacketType = 4;
inline bool Packet::has_syncpackettype() const {
  return category_case() == kSyncPacketType;
}
inline void Packet::set_has_syncpackettype() {
  _impl_._oneof_case_[0] = kSyncPacketType;
}
inline void Packet::clear_syncpackettype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (category_case() == kSyncPacketType) {
    _impl_.category_.syncpackettype_ = 0;
    clear_has_category();
  }
}
inline ::Proto::SyncPacketType Packet::syncpackettype() const {
  // @@protoc_insertion_point(field_get:Proto.Packet.syncPacketType)
  return _internal_syncpackettype();
}
inline void Packet::set_syncpackettype(::Proto::SyncPacketType value) {
  if (category_case() != kSyncPacketType) {
    clear_category();
    set_has_syncpackettype();
  }
  _impl_.category_.syncpackettype_ = value;
  // @@protoc_insertion_point(field_set:Proto.Packet.syncPacketType)
}
inline ::Proto::SyncPacketType Packet::_internal_syncpackettype() const {
  if (category_case() == kSyncPacketType) {
    return static_cast<::Proto::SyncPacketType>(_impl_.category_.syncpackettype_);
  }
  return static_cast<::Proto::SyncPacketType>(0);
}

// uint64 timestamp = 5;
inline void Packet::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t Packet::timestamp() const {
  // @@protoc_insertion_point(field_get:Proto.Packet.timestamp)
  return _internal_timestamp();
}
inline void Packet::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:Proto.Packet.timestamp)
}
inline ::uint64_t Packet::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void Packet::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// bytes payload = 6;
inline void Packet::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Packet::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto.Packet.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Packet::set_payload(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Proto.Packet.payload)
}
inline ::std::string* PROTOBUF_NONNULL Packet::mutable_payload()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:Proto.Packet.payload)
  return _s;
}
inline const ::std::string& Packet::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.Get();
}
inline void Packet::_internal_set_payload(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.payload_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Packet::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.payload_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Packet::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto.Packet.payload)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.payload_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.payload_.Set("", GetArena());
  }
  return released;
}
inline void Packet::set_allocated_payload(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_.IsDefault()) {
    _impl_.payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.Packet.payload)
}

inline bool Packet::has_category() const {
  return category_case() != CATEGORY_NOT_SET;
}
inline void Packet::clear_has_category() {
  _impl_._oneof_case_[0] = CATEGORY_NOT_SET;
}
inline Packet::CategoryCase Packet::category_case() const {
  return Packet::CategoryCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ChatMessageBody

// uint64 userId = 1;
inline void ChatMessageBody::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t ChatMessageBody::userid() const {
  // @@protoc_insertion_point(field_get:Proto.ChatMessageBody.userId)
  return _internal_userid();
}
inline void ChatMessageBody::set_userid(::uint64_t value) {
  _internal_set_userid(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:Proto.ChatMessageBody.userId)
}
inline ::uint64_t ChatMessageBody::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void ChatMessageBody::_internal_set_userid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// string message = 2;
inline void ChatMessageBody::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ChatMessageBody::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto.ChatMessageBody.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ChatMessageBody::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Proto.ChatMessageBody.message)
}
inline ::std::string* PROTOBUF_NONNULL ChatMessageBody::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:Proto.ChatMessageBody.message)
  return _s;
}
inline const ::std::string& ChatMessageBody::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ChatMessageBody::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ChatMessageBody::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ChatMessageBody::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto.ChatMessageBody.message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void ChatMessageBody::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.ChatMessageBody.message)
}

// -------------------------------------------------------------------

// SystemMessageBody

// string message = 1;
inline void SystemMessageBody::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& SystemMessageBody::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto.SystemMessageBody.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SystemMessageBody::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Proto.SystemMessageBody.message)
}
inline ::std::string* PROTOBUF_NONNULL SystemMessageBody::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:Proto.SystemMessageBody.message)
  return _s;
}
inline const ::std::string& SystemMessageBody::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void SystemMessageBody::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SystemMessageBody::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SystemMessageBody::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto.SystemMessageBody.message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void SystemMessageBody::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.SystemMessageBody.message)
}

// -------------------------------------------------------------------

// LoginRequestBody

// uint64 userId = 1;
inline void LoginRequestBody::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint64_t LoginRequestBody::userid() const {
  // @@protoc_insertion_point(field_get:Proto.LoginRequestBody.userId)
  return _internal_userid();
}
inline void LoginRequestBody::set_userid(::uint64_t value) {
  _internal_set_userid(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:Proto.LoginRequestBody.userId)
}
inline ::uint64_t LoginRequestBody::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void LoginRequestBody::_internal_set_userid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// -------------------------------------------------------------------

// LoginResponseBody

// bool isSuccessed = 1;
inline void LoginResponseBody::clear_issuccessed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuccessed_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool LoginResponseBody::issuccessed() const {
  // @@protoc_insertion_point(field_get:Proto.LoginResponseBody.isSuccessed)
  return _internal_issuccessed();
}
inline void LoginResponseBody::set_issuccessed(bool value) {
  _internal_set_issuccessed(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:Proto.LoginResponseBody.isSuccessed)
}
inline bool LoginResponseBody::_internal_issuccessed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuccessed_;
}
inline void LoginResponseBody::_internal_set_issuccessed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuccessed_ = value;
}

// -------------------------------------------------------------------

// LoginNotificationBody

// uint64 userId = 1;
inline void LoginNotificationBody::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t LoginNotificationBody::userid() const {
  // @@protoc_insertion_point(field_get:Proto.LoginNotificationBody.userId)
  return _internal_userid();
}
inline void LoginNotificationBody::set_userid(::uint64_t value) {
  _internal_set_userid(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:Proto.LoginNotificationBody.userId)
}
inline ::uint64_t LoginNotificationBody::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void LoginNotificationBody::_internal_set_userid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// string username = 2;
inline void LoginNotificationBody::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& LoginNotificationBody::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto.LoginNotificationBody.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LoginNotificationBody::set_username(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Proto.LoginNotificationBody.username)
}
inline ::std::string* PROTOBUF_NONNULL LoginNotificationBody::mutable_username()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:Proto.LoginNotificationBody.username)
  return _s;
}
inline const ::std::string& LoginNotificationBody::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void LoginNotificationBody::_internal_set_username(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.username_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LoginNotificationBody::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.username_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LoginNotificationBody::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto.LoginNotificationBody.username)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.username_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.username_.Set("", GetArena());
  }
  return released;
}
inline void LoginNotificationBody::set_allocated_username(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.LoginNotificationBody.username)
}

// -------------------------------------------------------------------

// LogoutRequestBody

// uint64 userId = 1;
inline void LogoutRequestBody::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::uint64_t LogoutRequestBody::userid() const {
  // @@protoc_insertion_point(field_get:Proto.LogoutRequestBody.userId)
  return _internal_userid();
}
inline void LogoutRequestBody::set_userid(::uint64_t value) {
  _internal_set_userid(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:Proto.LogoutRequestBody.userId)
}
inline ::uint64_t LogoutRequestBody::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void LogoutRequestBody::_internal_set_userid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// -------------------------------------------------------------------

// LogoutResponseBody

// bool isSuccessed = 1;
inline void LogoutResponseBody::clear_issuccessed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuccessed_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool LogoutResponseBody::issuccessed() const {
  // @@protoc_insertion_point(field_get:Proto.LogoutResponseBody.isSuccessed)
  return _internal_issuccessed();
}
inline void LogoutResponseBody::set_issuccessed(bool value) {
  _internal_set_issuccessed(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:Proto.LogoutResponseBody.isSuccessed)
}
inline bool LogoutResponseBody::_internal_issuccessed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.issuccessed_;
}
inline void LogoutResponseBody::_internal_set_issuccessed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.issuccessed_ = value;
}

// -------------------------------------------------------------------

// LogoutNotificationBody

// uint64 userId = 1;
inline void LogoutNotificationBody::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::uint64_t LogoutNotificationBody::userid() const {
  // @@protoc_insertion_point(field_get:Proto.LogoutNotificationBody.userId)
  return _internal_userid();
}
inline void LogoutNotificationBody::set_userid(::uint64_t value) {
  _internal_set_userid(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:Proto.LogoutNotificationBody.userId)
}
inline ::uint64_t LogoutNotificationBody::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void LogoutNotificationBody::_internal_set_userid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// string username = 2;
inline void LogoutNotificationBody::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& LogoutNotificationBody::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto.LogoutNotificationBody.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LogoutNotificationBody::set_username(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Proto.LogoutNotificationBody.username)
}
inline ::std::string* PROTOBUF_NONNULL LogoutNotificationBody::mutable_username()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:Proto.LogoutNotificationBody.username)
  return _s;
}
inline const ::std::string& LogoutNotificationBody::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void LogoutNotificationBody::_internal_set_username(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.username_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LogoutNotificationBody::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.username_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LogoutNotificationBody::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto.LogoutNotificationBody.username)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.username_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.username_.Set("", GetArena());
  }
  return released;
}
inline void LogoutNotificationBody::set_allocated_username(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.LogoutNotificationBody.username)
}

// -------------------------------------------------------------------

// TransformSyncBody

// uint64 userId = 1;
inline void TransformSyncBody::clear_userid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint64_t TransformSyncBody::userid() const {
  // @@protoc_insertion_point(field_get:Proto.TransformSyncBody.userId)
  return _internal_userid();
}
inline void TransformSyncBody::set_userid(::uint64_t value) {
  _internal_set_userid(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:Proto.TransformSyncBody.userId)
}
inline ::uint64_t TransformSyncBody::_internal_userid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.userid_;
}
inline void TransformSyncBody::_internal_set_userid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.userid_ = value;
}

// .Proto.Vector3 position = 2;
inline bool TransformSyncBody::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::Proto::Vector3& TransformSyncBody::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Proto::Vector3* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::Proto::Vector3&>(::Proto::_Vector3_default_instance_);
}
inline const ::Proto::Vector3& TransformSyncBody::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto.TransformSyncBody.position)
  return _internal_position();
}
inline void TransformSyncBody::unsafe_arena_set_allocated_position(
    ::Proto::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::Proto::Vector3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Proto.TransformSyncBody.position)
}
inline ::Proto::Vector3* PROTOBUF_NULLABLE TransformSyncBody::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::Proto::Vector3* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Proto::Vector3* PROTOBUF_NULLABLE TransformSyncBody::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto.TransformSyncBody.position)

  _impl_._has_bits_[0] &= ~0x00000001U;
  ::Proto::Vector3* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::Proto::Vector3* PROTOBUF_NONNULL TransformSyncBody::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Proto::Vector3>(GetArena());
    _impl_.position_ = reinterpret_cast<::Proto::Vector3*>(p);
  }
  return _impl_.position_;
}
inline ::Proto::Vector3* PROTOBUF_NONNULL TransformSyncBody::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001U;
  ::Proto::Vector3* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:Proto.TransformSyncBody.position)
  return _msg;
}
inline void TransformSyncBody::set_allocated_position(::Proto::Vector3* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }

  _impl_.position_ = reinterpret_cast<::Proto::Vector3*>(value);
  // @@protoc_insertion_point(field_set_allocated:Proto.TransformSyncBody.position)
}

// .Proto.Quaternion rotation = 3;
inline bool TransformSyncBody::has_rotation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rotation_ != nullptr);
  return value;
}
inline const ::Proto::Quaternion& TransformSyncBody::_internal_rotation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Proto::Quaternion* p = _impl_.rotation_;
  return p != nullptr ? *p : reinterpret_cast<const ::Proto::Quaternion&>(::Proto::_Quaternion_default_instance_);
}
inline const ::Proto::Quaternion& TransformSyncBody::rotation() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Proto.TransformSyncBody.rotation)
  return _internal_rotation();
}
inline void TransformSyncBody::unsafe_arena_set_allocated_rotation(
    ::Proto::Quaternion* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotation_);
  }
  _impl_.rotation_ = reinterpret_cast<::Proto::Quaternion*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Proto.TransformSyncBody.rotation)
}
inline ::Proto::Quaternion* PROTOBUF_NULLABLE TransformSyncBody::release_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::Proto::Quaternion* released = _impl_.rotation_;
  _impl_.rotation_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Proto::Quaternion* PROTOBUF_NULLABLE TransformSyncBody::unsafe_arena_release_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Proto.TransformSyncBody.rotation)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::Proto::Quaternion* temp = _impl_.rotation_;
  _impl_.rotation_ = nullptr;
  return temp;
}
inline ::Proto::Quaternion* PROTOBUF_NONNULL TransformSyncBody::_internal_mutable_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.rotation_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Proto::Quaternion>(GetArena());
    _impl_.rotation_ = reinterpret_cast<::Proto::Quaternion*>(p);
  }
  return _impl_.rotation_;
}
inline ::Proto::Quaternion* PROTOBUF_NONNULL TransformSyncBody::mutable_rotation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::Proto::Quaternion* _msg = _internal_mutable_rotation();
  // @@protoc_insertion_point(field_mutable:Proto.TransformSyncBody.rotation)
  return _msg;
}
inline void TransformSyncBody::set_allocated_rotation(::Proto::Quaternion* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rotation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.rotation_ = reinterpret_cast<::Proto::Quaternion*>(value);
  // @@protoc_insertion_point(field_set_allocated:Proto.TransformSyncBody.rotation)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Proto::TextMessageType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::Proto::TextMessageType>() {
  return ::Proto::TextMessageType_descriptor();
}
template <>
struct is_proto_enum<::Proto::LoginPacketType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::Proto::LoginPacketType>() {
  return ::Proto::LoginPacketType_descriptor();
}
template <>
struct is_proto_enum<::Proto::LogoutPacketType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::Proto::LogoutPacketType>() {
  return ::Proto::LogoutPacketType_descriptor();
}
template <>
struct is_proto_enum<::Proto::SyncPacketType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::Proto::SyncPacketType>() {
  return ::Proto::SyncPacketType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // types_2eproto_2epb_2eh
